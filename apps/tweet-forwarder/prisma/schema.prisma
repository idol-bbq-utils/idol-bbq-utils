generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model crawler_article {
  id                    Int               @id @unique(map: "sqlite_autoindex_crawler_article_1") @default(autoincrement())
  platform              Int
  a_id                  String
  u_id                  String
  username              String
  created_at            Int
  content               String?
  translation           String?
  translated_by         String?
  url                   String
  type                  String
  ref                   Int?
  has_media             Boolean
  media                 Json?
  extra                 Json?
  u_avatar              String?
  crawler_article       crawler_article?  @relation("crawler_articleTocrawler_article", fields: [ref], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_crawler_article crawler_article[] @relation("crawler_articleTocrawler_article")

  @@unique([a_id, platform], map: "sqlite_autoindex_crawler_article_2")
  @@index([platform], map: "platform_index")
  @@index([platform, created_at(sort: Desc)], map: "platform_by_timestamp")
}

model crawler_follows {
  id         Int    @id @unique(map: "sqlite_autoindex_crawler_follows_1") @default(autoincrement())
  username   String
  u_id       String
  platform   Int
  followers  Int
  created_at Int

  @@index([u_id], map: "user_id_index")
}

model forward_by {
  ref_id    Int
  platform  Int
  bot_id    String
  task_type String

  @@id([ref_id, platform, bot_id, task_type])
  @@index([bot_id], map: "bot_id_index")
}
